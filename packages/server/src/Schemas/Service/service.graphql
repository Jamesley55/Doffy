# import user from "user.graphql"

input CreateServices {
  name: String!
  category: String!
  description: String!
  coutryId: String
  stateId: String
  cityId: String
  Taxes: Boolean!
  Adress: String
  price: Float!
  payoutSchedule: String!
  customerBillingStatement: String!
  latitude: Float
  longitude: Float
}

input Schedulebool {
  monday: Boolean
  tuesday: Boolean
  wednesday: Boolean
  thusday: Boolean
  friday: Boolean
  saturday: Boolean
  sunday: Boolean
}
input StartEnd {
  StartTime: Int
  EndTime: Int
}
input ScheduleTime {
  mondaySchedule: StartEnd
  tuesdaySchedule: StartEnd
  wednesdaySchedule: StartEnd
  thusdaySchedule: StartEnd
  fridaySchedule: StartEnd
  saturdaySchedule: StartEnd
  sundaySchedule: StartEnd
}
type Mutation {
  createService(
    inputService: CreateServices
    ScheduleBool: Schedulebool
    ScheduleTime: ScheduleTime
  ): Boolean!
  DeleteService(ServiceId: String!): Boolean
}

input SearchServiceInput {
  uuidService: String
  uuidUser: String
}

type Service {
  id: String
  name: String
  pictureUrl: String
  description: String
  coutryId: String
  stateId: String
  cityId: String
  calendar: String
  Taxes: Boolean
  Adress: String
  rating: Int
  price: Float
  ownerId: String
}

type ServiceUser {
  user: User
  service: Service
}

type Query {
  searchServicesUser(
    inputs: SearchServiceInput
    offset: Int
    Limit: Int!
  ): ServiceUser!
  ServiceUser(ServiceId: String!): User
  ServiceByCategory(category: String!): [Service]
}
